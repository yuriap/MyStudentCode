Компонент TTable.

Свойства Методы Задачи События.
Модуль DBTables.
Описание.
Компонент TTable обеспечивает живой доступ к таблице базы данных через
Borland Database Engine. TTable - интерфейс между Borland Database Engine
и компонентами TDataSource. Компоненты TDataSource обеспечивают интерфейс
с умеющим отображать данные компонентом типа TDBGrid. Установите свойство
DatabaseName чтобы определить базу данных, к которой осуществляется 
доступ.
Установите свойство TableName на имя таблицы, к которой осуществляется
доступ. Установите свойство ReadOnly в True если Вы не хотите  изменять
содержимое таблицы. Установите свойство Exclusive в True если Вы не 
хотите,
чтобы любые другие приложения не имели доступа к таблице в то время, когда
Вы используете ее. Используйте свойство IndexName чтобы использовать
таблицу со вторичным индексом. Используйте свойства MasterFields и
MasterSource чтобы создать связь между таблицами с отношением
мастер-детализация.  Вызовите GotoCurrent метод чтобы переместить курсор
в то же самое положение (позицию) как в другой, связанной с данной, 
таблице.
Установите свойство Active в True или  вызовите метод Open для того
чтобы открыть тавлицу TTable и поместить ее в режим Browse. Установите
Active в False или  вызовите Close для того чтобы закрыть TTable.  
Вызовите
First, Next, Prior, Last, и MoveBy, методы чтобы перемещаться через 
таблицу.  Вызовите SetKey, FindKey, FindNearest, GotoKey, и GotoNearest 
методы чтобы искать в таблице базы данных определенные значения.
Проверите свойства BOF и EOF чтобы определить достиг ли курсор начала или
конца таблицы, соответственно.  Вызовите Append, Insert, AppendRecord или
InsertRecord методы чтобы  добавить запись к таблице. Вызовите метод 
Delete
для того чтобы удалить текущую запись.  Вызовите метод Edit для того чтобы
позволить приложению изменить записи в таблице, и Post чтобы послать
изменение базе данных или Cancel чтобы отказаться от них (изменений).

Используйте EditRangeStart, EditRangeEnd, SetRangeStart, SetRangeEnd,
ApplyRange и SetRange методы чтобы ограничить диапазон записей 
возвращаемых
приложению и метод CancelRange чтобы устранить предел. В дополнение к этим
свойствам, методам и событиям, этот компонент также имеет свойства и 
методы,
которые  применяются ко всем компонентам.

Свойства.

Свойство Active.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: property Active: Boolean;

Описание.

Установите свойство Active в True чтобы  открыть базу данных и поместить 
ее в состояние Browse. Установите Active в False чтобы закрыть базу данных 
и поместить ее в состояние Inactive. Изменение свойства Active 
эквивалентно вызову метода Close или Open. Д
Обратите внимание:    Post не  вызывается неявно при установке Active в 
False. Используйте событие BeforeClose чтобы явно отправить по почте любой 
 результат редактирования.

Свойство AutoCalcFields.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: property AutoCalcFields: Boolean;

Описание.
Свойство AutoCalcFields решает когда вызывается OnCalcFields. OnCalcFields 
- вызывается всякий раз, когда приложение восстанавливает запись из базы 
данных. Если AutoCalcFields - True, тогда OnCalcFields -  вызывается также 
всякий раз, когда поле в базе да
Если AutoCalcFields - True, OnCalcFields не должен исполнять какие-либо 
действия, которые могут изменить базу данных ( или связывать базы данных 
если они - часть отношения master-detail ), потому что это может привести 
к рекурсии. Например, если OnCalcFie

Свойство BOF.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: property BOF: Boolean;

Описание.
Использовать во время выполнения и только для чтения. BOF - Boolean 
свойство которое указывает находится ли a база данных на первой записи. 
Свойство BOF возвращает значение True только после:
		Если приложение впервые открывает таблицу.
		Вызван  метод First таблицы.
		Вызван и неудачно выполнен метод Prior таблицы.

Свойство CanModify.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: property CanModify: Boolean;

Описание.
Использовать во время выполнения и только для чтения. CanModify определяет 
может ли приложение изменить данные в базе данных. Когда CanModify - 
False, тогда база данных только читает и не может быть помещена в 
состояние Insert или Edit. Когда CanModify - 
TTable имеет свойство ReadOnly которое запрашивает привилегии записи, 
когда установлено в False. Когда ReadOnly - True, CanModify будет 
автоматически установлено в  False. Когда ReadOnly - False, CanModify 
будет True если база данных позволяет читать и 
пи

Свойство Database.

Применяется в TTable, TQuery компонентах.

Синтаксис: property Database: TDatabase;

Описание.
Использовать во время выполнения и только для чтения. Database определяет 
TDatabase компонент, связанный с компонентом базы данных TTable. Если Вы 
не создавали a TDatabase во время проектирования, то Delphi будет 
создавать эго во время исполнения. Использ

Свойство DatabaseName.

Применяется в TTable, TQuery, TStoredProc компонент.

Синтаксис: property DatabaseName: TFileName;

Описание.
Установите свойство DatabaseName чтобы определить базу данных для доступа. 
Это свойство может определяться:
		BDE псевдонимом.
		Путем к директории файлов базы данных.
		Путем к директории и имени файла  базы данных Local InterBase Server.
		Определенный в приложении псевдоним указанный в TDatabase         
компоненте.
Обратите внимание:    Используйте метод Close, который помещает базу 
данных в состояние Inactive перед  тем как изменить DatabaseName.

Свойство DBHandle.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: property DBHandle: HDBIDB;

Описание.
Использовать во время выполнения и только для чтения. Свойство DBHandle 
позволяет приложению делать прямой  вызов Borland Database Engine (BDE) 
API. Большое количество функций BDE вызывается через обработчик базы 
данных. Чаще всего это свойство не использ

Свойство DBLocale.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: property DBLocale: TLocale;

Описание.

Использовать во время выполнения и только для чтения. Свойство DBLocale 
позволяет делать прямой  вызов Borland Database Engine использующей ту же 
спецификацию драйвера языка. Чаще всего это свойство не используется если 
ваше приложение не требует некоторы

Свойство EOF.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: property: EOF: Boolean;

Описание.
Использовать во время выполнения и только для чтения. EOF - Boolean 
свойство, которое указывает достигнута ли в базе данных последняя запись. 
Свойство EOF возвращает значение True после того как:
		Приложение  открывает пустую базу данных.
		Вызывается метод Last таблицы.
		Неудачно вызывается метод Next таблицы, потому что курсор находится на 
последней записи.

Свойство Exclusive.

Применяется в компоненте TTable.

Синтаксис: property Exclusive: Boolean;

Описание.
Установите свойство Exclusive в True чтобы предотвратить обращение любого 
другого пользователя к таблице. Если другие пользователи работают с 
таблицей, которую Вы пытаетесь открыть, ваш обработчик исключительных 
систуаций должен ожидать тех пользователей,
Обратите внимание: Установите свойство Active в False перед  изменением 
свойства Exclusive чтобы предотвратить исключительную ситуацию.
Не устанавливайте Active и Exclusive в True в Окне Инспектора Объектов. 
Так как Инспектор Объектов будет одновременно иметь таблицу открытой и 
будет предотвращать попытки вашей программы открыть ту же таблицу. 
Установка Exclusive в True возможна только то

Свойство FieldCount.

Применяется в TDBGrid, TDBLookupList, TQuery, TStoredProc, TTable,
компонентах.

Синтаксис: property FieldCount: Integer;

Описание.
Использовать во время выполнения и только для чтения. Cвойство FieldCount 
определяет число полей в базе данных. Значение этого свойства может не 
совпадать с числом полей в основной таблице базы данных, так как Вы можете 
 добавлять расчетные поля и устраня
Для сетки данных  TDBGrid и коробки списка поиска базы данных 
TDBLookupListBox, значение свойства FieldCount соответствует числу полей в 
базе данных показанных в сетке TDBGrid.

Свойство FieldDefs.

Применяется  в TTable, TQuery, TStoredProc компонентах.

Синтаксис: property FieldDefs: TFieldDefs;

Описание.
Во время выполнения только. Свойство FieldDefs содержит информацию о 
каждом TFieldDef в базе данных. Вы можете использовать это свойство чтобы 
определить какие поля находятся в базе данных, их имена, типы и 
размеры.

Свойство Fields.

Применяется в TDBGrid, TDBLookupList, TQuery, TStoredProc и TTable 
компонентах.

Синтаксис: property Fields [ Index: Integer ]: TField;

Описание.
Использовать во время выполнения и только для чтения. Свойство Fields 
возвращает некоторое поле из базе данных, которое определяется через 
параметр Index, первое поле в базе данных имеет значение Index равное 
0.

Свойство Handle.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: property Handle: HDBICur;

Описание.
Использовать во время выполнения и только для чтения. Свойство Handle 
позволяет приложению делать прямой  вызов Borland Database Engine API 
который используюется компонентом базы данных. Чаще всего это свойство не 
используется если ваше приложение не треб

Свойство IndexDefs.

Применяется в компоненте TTable.

Синтаксис: property IndexDefs: TIndexDefs;

Описание.
Использовать во время выполнения и только для чтения. Cвойство IndexDefs 
содержит информацию о всех индексах таблицы TTable.
Обратите внимание: Свойство IndexDefs не всегда имеет возможность отразить 
текущее множество индексов. Перед исследованием свойства IndexDefs,  
вызовите метод Update, чтобы гарантировать что Вы имеете наиболее свежую 
информацию.

Свойство IndexFieldCount.

Применяется в компоненте TTable.

Синтаксис: property IndexFieldCount: Integer;

Описание.
Использовать только во время выполнения. Свойство IndexFieldCount - число 
фактических полей для текущего индекса. Если Вы используете первичный 
индекс для компонента, то значение будет равно 1. Если компонент не 
состоянии Active, то значение IndexFieldCou

Свойство IndexFieldNames.

Применяется в компоненте TTable.

Синтаксис: property IndexFieldNames: string;

Описание.
Свойство IndexFieldNames используется с сервером SQL чтобы  
идентифицировать колонки, которые нужно использовать как индекс для 
TTable.  Отделите имена колонок символами полудвоеточия ( ";" ). Если Вы 
имеете слишком большое количество имен колонок или 
име
Обратите внимание: Свойства IndexFieldNames и IndexName взаимно 
исключительны. Установка одного будет очищать другое.

Свойство IndexName.

Применяется в компоненте TTable.

Синтаксис: property IndexName: string;

Описание.
Свойство IndexName  опознает вторичный индекс для TTable. Если для 
IndexName не назначено какое-либо значение, то для упорядочивания записей 
будет использоваться первичный индекс таблицы.
Для таблицы dBASE, индекс должен находиться в файле индекса таблицы. Файл 
индекса владельца определеяется свойством TableName, в котором заменяется 
расширение имени файла "DBF" на "MDX". Неизвестные индексы не 
поддерживаются.
Обратите внимание: Свойства IndexFieldNames и IndexName взаимно 
исключительны. Установка одного будет очищать другой.

Свойство IndexFields.

Применяется в компоненте TTable.

Синтаксис: property IndexFields [ Index: Integer ]: TField;

Описание.
Использовать только во время выполнения. Свойство IndexFields дает Вам 
доступ к информации о каждом поле текущего индекса базы данных. Свойство 
Active должно быть выключенно иначе информация не будет соответствовать 
действительности.

Свойство KeyExclusive.

Применяется в компоненте TTable.

Синтаксис: property KeyExclusive: Boolean;

Описание.
Свойство KeyExclusive указывает будут ли исключаться из диапазона поиска 
соответствующие записи указанные для функции поиска. KeyExclusive - False 
по умолчанию.
Для методов SetRangeStart и SetRangeEnd, KeyExclusive  решает исключает ли 
фильтр диапазона границы этого диапазона. Значение по умолчанию - False 
означает что записи будут в отфильтрованном диапазоне если они большие чем 
или равны указанному значению нач
Для методов GoToNearest и FindNearest, KeyExclusive указывает будет ли 
курсор в результате поиска помещаться на или после записи которой ищут. 
Если KeyExclusive - False, тогда GoToNearest и FindNearest будет  
перемещать курсор на запись, которая соответст

Свойство KeyFieldCount.

Применяет в компоненте TTable.

Синтаксис: property KeyFieldCount: Integer;

Описание.
Свойство KeyFieldCount определяет число ключевых полей, которые 
используются с функциями поиска ( GotoKey, FindKey, EditKey, и так далее ) 
если Вы не хотите искать на всех ключевых полях.

Свойство Locale.

Применяет в TTable, TQuery, TStoredProc компонентах.

Синтаксис: property Locale: TLocale;

Описание.
Использовать во время выполнения и только для чтения. Свойство Locale 
определяет драйвер языка используемый с базой данных при прямом  вызове 
Borland Database Engine API. Чаще всего Вы не должны использовать это 
свойство, если ваше приложение не требует н

Свойство MasterFields.

Применяется в компоненте TTable.

Синтаксис: property MasterFields: string;

Описание.
Используйте свойство MasterFields чтобы определить колонку(и) чтобы  
связать таблицу-детализацию с таблицей-мастером, которая определена в 
свойстве MasterSource. MasterFields - это строка состоящая из одного или 
более имен полей которые  связывают две таб

Свойство MasterSource.

Применяется в компоненте TTable.

Синтаксис: property MasterSource: TDataSource;

Описание.
При соединении таблица-детализации с таблицей-мастером, используйте 
свойство MasterSource чтобы определить TDataSource от которого TTable 
будет  получать данные для таблицы-мастера.

Свойство Modified.

Применяет в TTable, TQuery, TStoredProc компонентах.

Синтаксис: property Modified: Boolean;

Описание.

Использовать во время выполнения и только для чтения. Свойство Modified - 
True если поле в текущей записи было изменено. Оно переустанавливается в 
False когда запись обновлена посредством  вызова Cancel или Post 
методов.

Свойство Name.

Применяется ко всем компонентам.

Синтаксис: property Name: TComponentName;
Описание.
Свойство Name содержит имя компонента в том виде в каком на него будут 
ссылаться другие компоненты. По умолчанию, Delphi назначает 
последовательные имена основанные на типе компонента, типа " Button1 ", " 
Button2 ", и так далее, Вы можете изменять их 
чтоб
Обратите внимание: Изменять имя компонента допустимо только во время 
проектирования.

Owner Property.
Applies to All components.
Declaration: property Owner: TComponent;
Description.


Свойство Owner.

Применяется ко всем компонентам.

Синтаксис: property Owner: TComponent;

Описание.
Использовать во время выполнения и только для чтения. Свойство Owner 
указывает который компонент владеет данным компонентом. Форма владеет 
всеми компонентами, которые находятся в ней. В свою очередь, форма 
принадлежит приложению. Когда один компонент прин
Не путайте владельца компонента с родителями компонента. Родитель - 
управляющее окно, которое содержит окно ребенка. Родитель и владелец 
компонента управляющего окна могут быть различными компонентами.

Свойство ReadOnly.

Применяется к компоненту TTable.

Синтаксис: property ReadOnly: Boolean;

Описание.
Используйте свойство ReadOnly, чтобы предотвратить измение данных в 
таблице пользователем.
Обратите внимание: Установите свойство Active в False перед  измением 
свойства ReadOnly.

Свойство RecordCount

Применяет в TTable, TQuery, TStoredProc компонентах

Синтаксис: property RecordCount: Longint;

Описание.
Использовать во время выполнения и только для чтения. Свойство RecordCount 
определяет число записей в базе данных. Число сообщенных записей может 
зависеть от сервера и от того находится ли ограничение диапазона в 
действии.

Свойство State.

Применяет в TTable, TQuery, TStoredProc компонентах.

Синтаксис: property State: TDataSetState;

Описание.
Использовать во время выполнения и только для чтения. Свойство State 
определяет текущее состояние базы данных. Возможные значения - типа 
TDataSetState:
		dsInactive когда база данных - закрыта
		dsBrowse когда база данных находится в состоянии Browse.
		dsEdit когда база данных находится в состоянии Edit.
		dsInsert когда база данных находится в состоянии Insert.
		dsSetKey когда база данных находится в состоянии SetKey.
		CalcFields когда вызвано событие OnCalcFields.

Свойство TableName.

Применяется в компонентах TTable.

Синтаксис: property TableName: TFileName;

Описание.

Свойство TableName - имя таблицы базы данных, с которой связан компонент 
TTable.
Обратите внимание: TTable должен быть закрыт, чтобы  изменять это 
свойство.

Свойство TableType.

Применяется в компоненте TTable.

Синтаксис: property TableType: TTableType

Описание.
Свойство TableType определяет тип основной таблицы базы данных. Это 
свойство не используется для таблицы SQL. Если TableType - установлено по 
умолчанию, расширение имени файла таблицы определяет тип таблицы:
		Расширение .DB или без расширения имени файла: таблица Paradox.
		Расширение .DBF: таблица dBASE.
		Расширение .TXT: ASCII таблица.
Если значение TableType установлено не по умолчанию, тогда таблица будет 
всегда иметь указанный TableType, независимо от расширения имени 
файла:
		ttASCII: файл Текста.
		ttDBase: таблица dBASE.
		ttParadox: таблица Paradox.
Обратите внимание: TTable должен быть закрыт, чтобы  изменять это 
свойство.

Свойство Tag.

Применяется ко всем компонентам.

Синтаксис: property Tag: Longint;

Описание.
Свойство Tag доступно чтобы хранить значение integer как часть компонента. 
В то время как свойство Tag не имеет никакое значение в Delphi, ваше 
приложение может использовать свойство чтобы хранить значение для 
специальных потребностей.

Свойство UpdateMode.

Применяется в TTable, TQuery компонентах (установит только живой 
результат).

Синтаксис: property UpdateMode;

Описание.
Свойство UpdateMode решает как Delphi будет находить записи обновляемые в 
базе данных SQL. Это свойство важно в многопользовательской среде когда 
пользователи могут обращаться к одним и тем же записям и делать 
противоречивое изменение в них. Когда пользов
В терминах SQL, UpdateMode определяет какие колонки включены в пункт WHERE 
выражения UPDATE. Если Delphi не может найти запись с первоначально 
указанним значением в колонке ( если другой пользователь  изменял значение 
в базе данных ), Delphi не будет дела
		WhereAll ( по умолчанию ): Delphi использует каждую колонку чтобы найти 
обновляемую запись. Это - наиболее ограничительный режим.
		WhereKeyOnly: Delphi использует только ключевые колонки чтобы найти 
обновляемую запись. Это - наименее ограничительный режим и должен 
использоваться только если другие пользователи не будут  изменять 
обновляемые записи.
		WhereChanged: Delphi использует ключевые колонки и колонки которые 
изменились чтобы найти обновляемую запись.

Методы.

Метод AddIndex.

Применяется в компоненте TTable.

Синтаксис: procedure AddIndex ( const Name, Fields: string; Options: 
TIndexOptions );

Описание.
Метод AddIndex создает новый индекс для TTable. Name - имя нового индекса. 
Fields - список полей, включонных в индекс.  Отделите имена полей 
двоеточием. Options - множество значений типа TIndexOptions.

Метод ApplyRange.

Применяется в компоненте TTable.

Синтаксис: procedure ApplyRange;

Описание.
Метод ApplyRange используется для того чтобы  применить начало и конец 
диапазона, установленного в SetRangeStart и SetRangeEnd методах или 
EditRangeStart и EditRangeEnd методах. Таким образом образуется фильтр для 
записей таблицы базы данных, доступных дл
Обратите внимание: При сравнении полей , ПУСТОЕ поле - всегда меньше чем 
любое другое возможное значение.

Метод Append.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: procedure Append;

Описание.
Метод Append  перемещает курсор в конец базы данных, помещает базу данных 
в состояние Insert, и добавляет новую, пустую запись. Когда приложение 
вызовет Post, новая запись будет вставлена в базу данных в позиции 
основанной на индексе, если тот определен. 
Этот метод имеет силу только для баз данных которые возвращают живую 
информацию.
Обратите Внимание: Для индексированной таблицы, Append и Insert методы 
будут помещать новую запись в правильное местоположение в таблице, 
основанное на индексе таблицы. Если ни один индекс в таблице не определен, 
тогда - Append будет добавлять запись в ко

Метод AppendRecord.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: procedure AppendRecord ( const Values: array of const );

Описание.
Метод AppendRecord добавляет в конец базы данных новую запись, при этом 
заполняя ее значениями полей предосталенными в параметре Values. 
Назначение элементов Values к полям записи происходит последовательно; 
первый элемент назначен первому полю, второй --
Этот метод корректен только для баз данных, которые возвращают живую 
информацию.
Обратите внимание: Для индексированной таблицы, AppendRecord и 
InsertRecord методы будут помещать новую запись в правильное 
местоположение, основанное на индексе таблицы. Если ни один индекс в 
таблице не определен, тогда - AppendRecord будет  добавлять 
за

Метод BatchMove.

Применяется в компоненте TTable.

Синтаксис: function BatchMove ( Asource: TDataSet; Amode: TBatchMode ): 
Longint;

Описание.
Метод BatchMove копирует, добавляет в конец, модернизирует, или удаляет 
записи в TTable. ASource - TTable связанная с таблицей базы данных 
содержащей исходные записи. AMode - режим копии; это может быть любой из 
элементов типа TBatchMode: batAppend, batUp
BatchMove возвращает число обработанных записей.

Метод Cancel.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: procedure Cancel;

Описание.
Метод Cancel возвращает базу данных к состоянию Browse и отменяет любое 
изменение в текущей записи.

Метод CancelRange.

Применяется в компоненте TTable.

Синтаксис: procedure CancelRange;

Описание.
Метод CancelRange отменяет диапазон ограничения для TTable который был 
предварительно установлен вызовами ApplyRange или SetRange методов.

Метод CheckBrowseMode.

Применяется в TTable, TQuery, TStoredProc компонентах

Синтаксис: procedure CheckBrowseMode;

Описание.
Метод CheckBrowseMode проверяет открыта ли база данных и не ожидается ли 
какое-нибудь изменение. Если свойство State базы данных - dsEdit, dsInsert 
или dsSetKey, вызывается метод Post, чтобы отправить по почте любое 
ожидаемое изменение. Если база данных -

Метод ClearFields.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: procedure ClearFields;

Описание.
Метод ClearFields очищает все поля текущей записи, приводя их к значению 
по умолчанию (обычно это ПУСТО (NULL)), база данных должна быть в 
состоянии Edit или будет поднято исключение EDatabaseError.

Метод Close.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: procedure Close;

Описание.
Метод Close  закрывает базу данных, возвращающую ее в состояние Inactive. 
Вызов Close эквивалентен установке свойства Active в False.
Обратите внимание: Метод Post не  вызывается методом Close. Используйте 
событие BeforeClose, чтобы отправить по почте результат 
редактирования.

Метод CreateTable.

Применяется к компоненту TTable.

Синтаксис: procedure CreateTable;

Описание.
Метод CreateTable создает новую пустую таблицу базы данных. Перед вызовом 
этого метода, свойствам DatabaseName, TableName,  TableType, FieldDefs и 
IndexDefs должны быть назначенны значения.

Метод CursorPosChanged.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: procedure CursorPosChanged;

Описание.
Метод CursorPosChanged необходим лишь в том случае если Вы используете 
свойство Handle для того чтобы проводить прямой  вызов Borland Database 
Engine (BDE) API, оно заставляет измениться позиции курсора. Чтобы 
уведомить базу данных, позицию курсора в кото

Метод Delete.

Применяется в TTable, TQuery компонентах.

Синтаксис: procedure Delete;

Описание.
Метод Delete удаляет текущую запись из базы данных. Следующая за удаленной 
запись становится текущей записью. Если удаленная запись была последней 
записью в базе данных, то предыдущая запись становится текущей записью.
Этот метод сорректен только для баз данных которые возвращают живую 
информацию.

Метод DeleteIndex.

Применяется в компоненте TTable.

Синтаксис: procedure DeleteIndex ( const Name: string );

Описание.
Метод DeleteIndex удаляет вторичный индекс для TTable. Name - имя индекса. 
Вы должны  открыть таблицу с исключительным доступом (свойство Exclusive = 
True ).

Метод DeleteTable.

Применяется в компоненте TTable.

Синтаксис: procedure DeleteTable;

Описание.
Метод DeleteTable удаляет существующую таблицу базы данных. Перед вызовом 
этого метода, свойствам DatabaseName, TableName и TableType должны быть 
назначенны значения. Таблица должна быть закрытой.

Метод DisableControls.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: procedure DisableControls;

Описание.
Метод DisableControls временно разьединяет базу данных со всеми 
компонентами TDataSource. В то время как источники данных разьединены, 
связанные с данными компоненты отображения не будут показывать изменения в 
базе данных. Итерации по базе данных методами
Используйте EnableControls чтобы восстановить связь. Не зависимо от 
количества вызовов DisableControls и EnableControls, только последний 
вызов  EnableControls фактически будет модернизировать источники 
данных.

Метод Edit.

Применяется в TTable, TQuery компонентах.

Синтаксис: procedure Edit;

Описание.
Метод Edit  готовит текущую запись базы данных для изменения и помещает 
базу данных в состояние Edit, установив свойство State dsEdit. Компоненты 
отображения данных (data control) не могут изменить существующие записи 
если база данных не находится в состо

Метод EditKey.

Применяется  компоненте TTable.

Синтаксис: procedure EditKey;

Описание.
Используйте метод EditKey для того чтобы изменить содержание буфера ключей 
поиска. Этот метод полезен только при поиске на многократных полях после 
вызова SetKey. Вызовите GotoKey чтобы  переместить курсор на запись с  
соответствующим ключом. EditKey отли

Метод EditRangeEnd.

Применяется в компоненте TTable.

Синтаксис: procedure EditRangeEnd;

Описание.
EditRangeEnd позволяет Вам изменить  начальное значение диапазона фильтра 
базы данных установленного SetRangeEnd. Последующие присваивания значений 
полю будут изменять конечное значение диапазона предварительно 
установленного SetRangeEnd.  Вызовите ApplyR
EditRangeEnd отличается от SetRangeEnd, так как последний очищает все 
элементы буфера ключей поиска и приводит их к значению по умолчанию 
(NULL). EditRangeEnd  оставляет элементы буфера ключей поиска неизменными 
с их текущим значением.
Обратите внимание: С таблицами Paradox или dBASE, данные методы работают 
только с индексированными полями. С базами данных SQL, они могут работать 
с любыми полями указанными в свойстве IndexFieldNames.

Метод EditRangeStart.

Применяется в компоненте TTable.

Синтаксис: procedure EditRangeStart;

Описание.
EditRangeStart позволяет Вам изменить нижний предел ключей, установленный 
в SetRangeStart.  Вызовите ApplyRange чтобы  применить новый диапазон для 
фильтрования базы данных. EditRangeStart отличается от SetRangeStart тем 
что последний очищает все элементы
Обратите внимание: С таблицей Paradox или dBASE, методы работают только с 
индексированными полями. С базами данных SQL, они могут работать с любыми 
колонками указанными в свойстве IndexFieldNames.

Метод EmptyTable.

Применяется в компоненте TTable.

Синтаксис: procedure EmptyTable;

Описание.
Метод EmptyTable удаляет все записи из таблицы базы данных указанной в 
TableName. Перед вызовом этого метода свойства DatabaseName, TableName и 
TableType должны быть установлены.
Обратите внимание: Таблица должна быть открытой со свойством Exclusive 
установленным в True.

Метод EnableControls.

Применяется  TTable, TQuery, TStoredProc компонентах.

Синтаксис: procedure EnableControls;

Описание.
Метод EnableControls восстанавливает связ базы данных со всеми 
компонентами TDataSource, которые были разьединены вызовом метода 
DisableControls. В то время как источники данных разьединены, изменение в 
активной записи не будет отражено в них. Не 
зависимо

Метод FieldByName.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: function FieldByName ( const FieldName: string ):TField;

Описание.
Метод FieldByName возвращает TField именем переданным как аргумент через 
FieldName. Использование FieldByName защищает ваше приложение от изменения 
в порядка следования полей в базе данных. Если поле не может быть найдено, 
FieldByName поднимает исключение

Метод FindField.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: function FindField ( const FieldName: string ): TField;

Описание.
Метод FindField возвращает поле с именем переданным через FieldName. 
Вызове FindField слегка более медленный способ обращения к полю, чем 
прямая ссылка на свойство Fields, использование FindField защищает ваше 
приложение от изменения порядка полей в табли

Метод FindKey.

Применяется в компоненте TTable.

Синтаксис: function FindKey ( const KeyValues: array of const ):Boolean;

Описание.
Метод FindKey обыскивает таблицу базы данных чтобы найти запись чье 
значение индексного поля соответствуют переданным в KeyValues. FindKey 
берет разграниченный запятой массив, как аргумент, где каждое значение  
соответствует индексному полю в таблице. Зна
FindKey делает следующее:
		Помещает TTable в состояние SetKey.
		Находит запись в таблице которая соответствует указанному значению.
		Если соответствующая запись найдена, то  перемещает курсор на нее, и 
возвращает True.
		Если соответствующая записи не найдена, то курсор не перемещается, и 
FindKey возвращает False.

Метод FindNearest.

Применяется в компоненте TTable.

Синтаксис: procedure FindNearest( const KeyValues: array of const );

Описание.
Метод FindNearest перемещает курсор в первую запись, значение индексного 
поля которой большее или равно переданным в KeyValues. Поиск начинается с 
первой записи, не с текущей позиции курсора. Этот метод может 
использоваться только с колонками данных типа 
FindNearest работает по умолчанию с первичным индекным полем. Чтобы 
осуществлять поиск в таблице по другим индексным полям, Вы должны 
определить имя поля в свойстве таблицы IndexFieldNames или имя индекса в 
свойстве IndexName.
Свойство KeyExclusive указывает будет ли поиск помещать курсор на или 
после записи которую ищут.
Обратите Внимание: С таблицей Paradox или dBASE, FindNearest работает 
только с индексированными полями. С базами данных SQL, он может работать с 
любыми колонками указанными в свойстве IndexFieldNames.

Метод First.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: procedure First;

Описание.
Метод First  перемещает курсор в первую запись в активном диапазоне 
записей базы данных. Активный диапазон записей определяется фильтром 
установленным в ApplyRange.
Если база данных находится в состоянии Edit или Insert, First будет 
выполнять неявно Post любых измененных данных.

Метод FreeBookmark.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: procedure FreeBookmark ( Bookmark:TBookmark );

Описание.
Используйте метод FreeBookmark в комбинации с методами GetBookmark и 
GotoBookmark. FreeBookmark выпускает ресурсы системы сохраненные при 
вызыве GetBookmark.

Метод GetBookmark.

Применяется к TTable, TQuery, TStoredProc компонентах.

Синтаксис: function GetBookmark: TBookmark;

Описание.
Метод GetBookmark сохраняет текущую информацию о записи базы данных чтобы 
позволить Вам возвратится к той же записи позже посредством вызова метода 
GotoBookmark. После использования bookmark (закладки) в конечном счете 
должен быть вызван метод FreeBookmar
Обратите Внимание: Все bookmarks (закладки) перестают действовать после 
того как база данных - закрывается или изменен индекс таблицы.

Метод GetFieldNames.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: procedure GetFieldNames (var List: TStrings );

Описание.
Метод GetFieldNames очищает TStrings аргумент, List, и записывает в него 
имена каждого поля базы данных.

Метод GetIndexNames.

Применяется в компоненте TTable.

Синтаксис: procedure GetIndexNames ( List: TStrings );

Описание.
Метод GetIndexNames добавляет имена всех доступных индексов для TTable в 
параметр List.

Метод GotoBookmark.

Применяется в TTable, TQuery, TStoredProc компонентах.

Синтаксис: procedure GotoBookmark( Bookmark:TBookmark );

Описание.
Метод GotoBookmark  перемещается курсор в запись соответствующую bookmark 
(заклкдке), полученной через вызов GetBookmark. Так как Вы должны в 
конечном счете  вызвать метод FreeBookmark, чтобы освободить ресурсы 
сохраненные при вызове GetBookmark, Вы может

Метод GotoCurrent.

Применяется в компоненте TTable.

Синтаксис: procedure GotoCurrent ( Table: TTable );

Описание.
Используйте метод GotoCurrent, чтобы синхронизировать позиции двух 
компонентов TTable которые используют одну и ту же таблицу базы данных. 
GotoCurrent изменяет позицию курсора таблицы, чтобы соответствовать 
позиции курсора в таблице Table, переданной как 
Обратите Внимание: Обе таблицы должны иметь один и тот же DatabaseName и 
TableName, иначе возникнет исключительная ситуация "table 
mismatch".

Метод GotoKey.

Применяется в компоненте TTable.

Синтаксис: function GotoKey: Boolean;

Описание.

Метод GotoKey используется с методами SetKey или EditKey, чтобы двигаться 
на определенную запись в TTable.  Вызовите SetKey чтобы поместить таблицу 
в состояние SetKey. В состоянии SetKey, назначенное поле указывает 
значение для поиска в индексированных по
Обратите внимание: Если Вы хотите искать в подмножестве полей в много - 
полевом ключе, Вы должны установить свойство KeyFieldCount в число полей в 
которых Вы хотите искать.

Метод GotoNearest.

Применяется в компоненте TTable.

Синтаксис: procedure GotoNearest;

Description.
The GotoNearest method is used with the EditKey or SetKey method to move 
to a record in the dataset whose index fields are greater than or equal to 
the IndexFields property. Call SetKey first to put the TTable in SetKey 
state, modify the fields of the key
The KeyExclusive property indicates whether a search will position the 
cursor on or after the specified record being searched for. 

Описание.
Метод GotoNearest используется с EditKey или SetKey метод  двигаться в 
запись a в базу данных чей поля индекса большие чем или равны IndexFields 
свойству. Вызовите SetKey сначала чтобы поместить TTable в состояние 
SetKey, изменять поля ключа, и наконец  в
Note:	You do not have to assign a value for each field in the index key. 
Any unassigned field will use a NULL value.
The search begins at the first record in the table, not at the current 
cursor position.

Insert Method.

Applies to TTable, TQuery components.


Обратите Внимание:    Вы не должны назначить значение a для каждого поля в 
ключе индекса. Любое неназначенное поле будет использовать значение 
ПУСТОГО УКАЗАТЕЛЯ a.
Поиск  начинается в первой записи в таблице, не в текущем 
положении(позиции) курсора.

Insert Метод.

Применяет к TTable, TQuery компоненты.

Declaration: procedure Insert;

Description.
The Insert method puts the dataset into Insert state and opens a new, 
empty record at the current cursor location. When an application calls 
Post, the new record will be inserted in the dataset in a position based 
on its index, if defined. To discard the 

Синтаксис: Insert procedure;

Описание.
Метод Insert помещает базу данных в Insert заявляют и  открывается a 
новый, пустая запись в текущем местоположении курсора. Когда приложение  
вызовет Post, новая запись будет вставлена в базу данных в 
положении(позиции) a основанном на индексе, если 
опред
Note:	For indexed tables, the Append and Insert methods will both put the 
new record in the correct location in the table, based on the table's 
index. If no index is defined on the underlying table, then the record 
will maintain its position--Append will 

Обратите Внимание:    Для индексированной таблицы, Append и Insert методы 
будет и помещать новую запись в правильное местоположение в таблице, 
основанной на индексе таблицы. Если никакой индекс не определен на 
основной таблице, тогда запись будет обслужив

InsertRecord Method.

Applies to TTable, TQuery components.

Declaration: procedure InsertRecord(const Values: array of const);

Description.

InsertRecord Метод.

Применяет к TTable, TQuery компоненты.

Синтаксис: InsertRecord procedure ( const Values: array const );

Описание.
The InsertRecord method inserts a new record into the dataset using the 
field values passed in the Values parameter. The assignment of the 
elements of Values to fields in the record is sequential; the first 
element is assigned to the first field, the seco

Метод InsertRecord вставляет a новую запись в базу данных использующую 
полевое значение пропущенное в параметре Values. Назначение элементов 
Values к полям в записи последовательно; первый элемент назначен к первому 
полю, второй к второму, и т.д.. Число п
This method is valid only for datasets that return a live result set.
Этот метод имеет силу только для баз данных которые возвращают a живой 
множество результата.
Note:	For indexed tables, the AppendRecord and InsertRecord methods will 
both put the new record in the correct location in the table, based on the 
table's index. If no index is defined on the underlying table, then the 
record will maintain its position--

Обратите Внимание:    Для индексированной таблицы, AppendRecord и 
InsertRecord методы будет и помещать новую запись в правильное 
местоположение в таблице, основанной на индексе таблицы. Если никакой 
индекс не определен на основной таблице, тогда запись 
бу

Last Method.

Applies to TTable, TQuery, TStoredProc components.

Declaration: procedure Last;

Description.

Last Метод.

Применяет к TTable, TQuery, TStoredProc компоненты.

Синтаксис: Last procedure;

Описание.
The Last method moves the cursor to the last record in the active range of 
records of the dataset. The active range of records is affected by the 
filter established with SetRangeEnd.
If the dataset is in Insert or Edit state, Last will perform an implicit 
Post of any pending data.

MoveBy Method.

Applies to TTable, TQuery, TStoredProc components.

Метод Last  перемещает курсор в последнюю(прошлую) запись в активном 
диапазоне записей базы данных. Активный диапазон записей поврежден 
фильтром установленным с SetRangeEnd.
Если база данных находится в Insert или состоянии Edit, Last будет 
исполнять неявный Post любых ожидаемых данных.

MoveBy Метод.

Применяет к TTable, TQuery, TStoredProc компоненты.

Declaration: procedure MoveBy(Distance: Integer);

Description.
The MoveBy method moves the dataset cursor by Distance records. If 
Distance is negative, the move is backward. If Distance is positive, the 
movement is forward. If Distance is zero, no move is done.
If the dataset is in Insert or Edit state, MoveBy will perform an implicit 
Post of any pending data.


Синтаксис: procedure MoveBy ( Distance: Integer );

Описание.
MoveBy метод  перемещает курсор базы данных записями Distance. Если 
Distance отрицательный,  переместить обратен. Если Distance положителен, 
движение передне(срочно). Если Distance - ноль, нет  двигаются 
выполнен.
Если база данных находится в Insert или состояние Edit, MoveBy будет 
исполнять неявный Post любых ожидаемых данных.

Next Method.

Applies to TTable, TQuery, TStoredProc components.

Declaration: procedure Next;

Description.

Next Метод.

Применяет к TTable, TQuery, TStoredProc компоненты.

Синтаксис: Next procedure;

Описание.
The Next method moves the cursor forward by one record. If the cursor is 
already on the last record, it does not move. If the dataset is in Insert 
or Edit state, Next will perform an implicit Post of any pending data.

Open Method.

Applies to TTable, TQuery, TStoredProc components.

Declaration: procedure Open;

Метод Next  перемещает курсор вперед одной записью. Если курсор - уже на 
последней(прошлой) записи, это не  двигается. Если база данных находится в 
Insert или состоянии Edit, Next будет исполнять неявный Post любых 
ожидаемых данных.

Open Метод.

Применяет к TTable, TQuery, TStoredProc компоненты.

Синтаксис: Open procedure;

Description.
The Open method opens the dataset, putting it in Browse state. It is 
equivalent to setting the Active property to True.
For TQuery, Open executes the SELECT statement in the SQL property. If the 
statement does not return a result set (for example, an INSERT or UPDATE 
statement), then use ExecSQL instead of Open.

Описание.
Метод Open  открывает базу данных, помещающую это в состоянии Browse. Это 
эквивалентно установке свойства Active к True. Для TQuery, Open выполняет 
выражение ВЫБОРА в свойстве SQL. Если выражение не возвращает множество 
результата a ( например, ВСТАВЛЯЕМЫ
For TStoredProc, use Open to execute the stored procedure if the procedure 
returns a result set. If the stored procedure returns a single row, use 
ExecProc instead.

Post Method.

Applies to Table, TQuery, TStoredProc components.

Declaration: procedure Post;

Для TStoredProc, Open использования чтобы выполнить запасенный procedure 
если procedure возвращает множество результата a. Если запасенный 
procedure возвращает a единственный(отдельный) ряд, использование ExecProc 
вместо.

Post Метод.

Применяет к Таблице, TQuery, TStoredProc компоненты.

Синтаксис: Post procedure;

Description.
The Post method writes the current record to the database. Post should be 
called after calling Append or Insert and making any desired changes to 
the fields of the current record. Post behaves differently depending on a 
dataset's state. 
	In Edit state, Post modifies the current record.
	In Insert state, Post inserts or appends a new record.

Описание.
Метод Post пишет текущую запись к базе данных. Post должен быть  вызывал 
после вызывающего Append или Insert и производящий любое желательное 
изменение к полям текущей записи. Post ведет себя по-другому в зависимости 
от a состояния базы данных.
		В состоянии Edit, Post изменяет текущую запись.
		В состоянии Insert, Post вставляет или добавляет в конец a новую запись.
	In SetKey state, Post commits the changes to the search key buffer, and 
returns the dataset to Browse state.
Posting can be done explicitly, or implicitly as part of another 
procedure. When an application moves off the current record, Delphi calls 
Post implicitly. Calls to the Next, MoveBy, Prior, First, and Last methods 
perform a Post if the table is in Edit or

		В состоянии SetKey, Post передает(совершает) изменение на буфер ключей 
поиска, и возвращает базу данных к состоянию Browse.
Отправление По почте может быть выполнено явно, или неявно как часть 
другого procedure. Когда прикладные шаги от текущей записи, Delphi  
вызовет Post неявно.  Вызывает к Next, MoveBy, Prior, First, и Last методы 
исполняют a Post если таблица находится в с
Append, AppendRecord, Insert, и InsertRecord методы также неявно исполняют 
a Post любых ожидаемых данных.
Note:	If the record can not be written to the database for some reason, 
the dataset will remain in Edit state.

Prior Method.

Applies to TTable, TQuery, TStoredProc components.

Declaration: procedure Prior;

Обратите Внимание:    Если запись не может быть написана к базе данных по 
некоторым причинам, база данных будет оставаться в состоянии Edit.

Prior Метод.

Применяет к TTable, TQuery, TStoredProc компоненты.

Синтаксис: Prior procedure;

Description.
The Prior method moves the current record position of the dataset backward 
by one record. If the dataset is in Insert or Edit state, Prior will 
perform an implicit Post of any pending data.

Refresh Method.

Applies to TTable, TQuery, TStoredProc components.

Описание.
Метод Prior  перемещает текущее положение(позицию) записи базы данных 
назад одной записью. Если база данных находится в Insert или состоянии 
Edit, Prior будет исполнять неявный Post любых ожидаемых данных.

Refresh Метод.

Применяет к TTable, TQuery, TStoredProc компоненты.

Declaration: procedure Refresh;

Description.
The Refresh method rereads all records from the dataset. Use Refresh to be 
certain that data controls display the latest information from the 
dataset. Calling Refresh may unexpectedly change the displayed data, 
potentially confusing the user.

SetFields Method.

Синтаксис: Refresh procedure;

Описание.
Метод Refresh повторно читает все записи от базы данных. Refresh 
Использования чтобы убедиться что данные управляет показом самой последней 
информацией от базы данных. Вызов Refresh может неожиданно  изменять 
показанные данные, потенциально смешивающий по

SetFields Метод.

Applies to TTable, TQuery, TStoredProc components.

Declaration: procedure SetFields(const Values: array of const);

Description.

Применяет к TTable, TQuery, TStoredProc компоненты.

Синтаксис: procedure SetFields ( const Values: array const );

Описание.
SetFields assigns the values specified in the Values array parameter to 
the fields in the dataset. If Values has fewer elements than there are 
fields, the remaining elements are unchanged. To assign a null value to a 
field, use the keyword Null. To not as
SetFields назначает значение указанное в параметре array Values к полям в 
базе данных. Если Values имеет меньшее количество элементов чем имеются 
поля, остающиеся элементы неизменны. Назначить значение пустого указателя 
a к полю a, использовать Пустой Ука
Before calling this method, an application must first call Edit to put the 
dataset in Edit state. To then modify the current record in the database, 
it must then call Post. Because this method depends explicitly on the 
structure of the underlying table, a

SetKey Method.

Applies to TTable component.

Перед вызовом этого метода, приложение должно Edit первого взноса помещать 
базу данных в состояние Edit. Чтобы тогда изменить текущую запись в базе 
данных, это должно тогда  вызвать Post. Потому что этот метод зависит явно 
от структуры основной таблицы, п

SetKey Метод.

Применяется к компоненту TTable.

Declaration: procedure SetKey;

Description.

Синтаксис: procedure SetKey;

Описание.
The SetKey method puts the TTable in SetKey state (the State property is 
set to dsSetKey). This enables an application to search for values in 
database tables. In SetKey state, you can set the values of the search key 
buffer. The search key buffer is a se
SetKey метод помещает TTable в состояние SetKey ( свойство штата - 
множество к dsSetKey ). Это позволяет приложению искать значение в таблице 
базы данных. В состоянии SetKey, Вы можете установить значение буфера 
ключей поиска. Буфер ключей поиска - множес
SetKey differs from EditKey in that the former clears all the elements of 
the search key buffer. EditKey leaves the elements of the search key 
buffer with their current values, but enables you to edit them.

SetRange Method.

Applies to TTable component.

SetKey отличается от EditKey в котором вышеупомянутый(прежний) очищает все 
элементы буфера ключей поиска. EditKey  оставляет элементы буфера ключей 
поиска с их текущим значением, но позволяет Вам редактировать их.

SetRange Метод.

Применяется к компоненту TTable.

Declaration: procedure SetRange(const StartValues, EndValues: array of 
const);

Description.

Синтаксис: SetRange procedure ( const StartValues, EndValues: array const 
);

Описание.
The SetRange method combines the functionality of the SetRangeStart, 
SetRangeEnd, and ApplyRange methods. SetRange assigns the elements of 
StartValues to the beginning index key, the elements of EndValues to the 
ending index key, and then calls ApplyRange

Метод SetRange  объединяет( комбинирует) функциональные возможности 
SetRangeStart, SetRangeEnd, и ApplyRange методы. SetRange назначает 
элементы StartValues к  начинающемуся ключу индекса, элементы EndValues к 
заканчивающемуся ключу индекса, и тогда  вызо
Note:	With Paradox or dBASE tables, these methods work only with indexed 
fields. With SQL databases, they can work with any columns specified in 
the IndexFieldNames property.

SetRangeEnd Method.

Applies to TTable component.

Declaration: procedure SetRangeEnd;

Обратите Внимание:    С Paradox или таблицей dBASE, они методы работу 
только с индексированными полями. С базами данных SQL, они могут работать 
с любыми колонками указанными в IndexFieldNames свойстве.

SetRangeEnd Метод.

Применяется к компоненту TTable.

Синтаксис: SetRangeEnd procedure;

Description.
SetRangeEnd indicates that subsequent assignments to field values will 
specify the end of the range of rows to include in the dataset. This 
enables an application to filter the data that is visible to it. Any 
column values not specified are not considered

Описание.
SetRangeEnd указывает что последующие назначения на полевое значение будут 
определять конец диапазона рядов чтобы включить в базу данных. Это 
позволяет приложению на фильтр данные который является видимым к этому. 
Любое значение колонки не указанный не ра
SetRangeEnd differs from EditRangeEnd in that it clears all the elements 
of the range filter to the default values (or NULL). EditRangeEnd leaves 
the elements of the range filter with their current values.
Note:	With Paradox or dBASE tables, these methods work only with indexed 
fields. With SQL databases, they can work with any columns specified in 
the IndexFieldNames property.

SetRangeStart Method.


SetRangeEnd отличается от EditRangeEnd в котором это очищает все элементы 
фильтра диапазона к по умолчанию значению ( или ПУСТОЙ УКАЗАТЕЛЬ ). 
EditRangeEnd  оставляет элементы фильтра диапазона с их текущим 
значением.
Обратите Внимание:    С Paradox или таблицей dBASE, они методы работу 
только с индексированными полями. С базами данных SQL, они могут работать 
с любыми колонками указанными в IndexFieldNames свойстве.

SetRangeStart Метод.

Applies to TTable component.

Declaration: procedure SetRangeStart;

Description.

Применяется к компоненту TTable.

Синтаксис: procedure SetRangeStart;

Описание.
SetRangeStart indicates that subsequent assignments to field values will 
specify the start of the range of rows to include in the dataset. This 
enables an application to filter the data that is visible to it. Any 
column values not specified are not consid

SetRangeStart указывает что последующие назначения на полевое значение 
будут определять начало диапазона рядов чтобы включить в базу данных. Это 
позволяет приложению на фильтр данные который является видимым к этому. 
Любое значение колонки не указанный не
SetRangeStart differs from EditRangeStart in that it clears all the 
elements of range filter to the default values (or NULL). EditRangeStart 
leaves the elements of range filter with their current values.
Note:	With Paradox or dBASE tables, these methods work only with indexed 
fields. With SQL databases, they can work with any columns specified in 
the IndexFieldNames property.

UpdateRecord Method.

SetRangeStart отличается от EditRangeStart в котором это очищает все 
элементы фильтра диапазона к по умолчанию значению ( или ПУСТОЙ УКАЗАТЕЛЬ 
). EditRangeStart  оставляет элементы фильтра диапазона с их текущим 
значением.
Обратите Внимание:    С Paradox или таблицей dBASE, они методы работу 
только с индексированными полями. С базами данных SQL, они могут работать 
с любыми колонками указанными в IndexFieldNames свойстве.

UpdateRecord Метод.

Applies to TTable, TQuery, TStoredProc components.

Declaration: procedure UpdateRecord;

Description.

Применяет к TTable, TQuery, TStoredProc компоненты.

Синтаксис: procedure UpdateRecord;

Описание.
The UpdateRecord method notifies each TDataSource component that the 
current record is about to be posted to the dataset. Each data source in 
turn notifies all data controls so that they can update the fields of the 
record from the current values displaye

UpdateRecord метод уведомлял каждый компонент TDataSource что текущая 
запись собирается отправлено по почте к базе данных. Каждый источник 
данных в свою очередь уведомлял что все данные управляет так, чтобы они 
модернизировали поля записи от текущего знач
